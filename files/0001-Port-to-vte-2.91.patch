From 9af6c6804a790f11a2924ece5fab6483924676fe Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@solus-project.com>
Date: Tue, 12 May 2015 23:01:24 +0100
Subject: [PATCH] Port to vte-2.91

Signed-off-by: Ikey Doherty <ikey@solus-project.com>
---
 CMakeLists.txt          |  4 ++--
 src/SearchToolbar.vala  |  2 +-
 src/Settings.vala       |  4 ++--
 src/TerminalWidget.vala | 45 +++++++++++++++++++++++----------------------
 4 files changed, 28 insertions(+), 27 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index cb8595e..3cb538b 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -42,7 +42,7 @@ pkg_check_modules (DEPS REQUIRED
   gthread-2.0
   gtk+-3.0>=3.9.10
   granite>=0.3.0
-  vte-2.90
+  vte-2.91
   libnotify
   gdk-3.0)
 
@@ -72,7 +72,7 @@ vala_precompile (VALA_C
     src/Constants.vala
     src/SearchToolbar.vala
 PACKAGES
-    vte-2.90
+    vte-2.91
     granite
     gtk+-3.0
     libnotify
diff --git a/src/SearchToolbar.vala b/src/SearchToolbar.vala
index ac8232d..5ad5051 100644
--- a/src/SearchToolbar.vala
+++ b/src/SearchToolbar.vala
@@ -83,7 +83,7 @@ namespace PantheonTerminal.Widgets {
                 //FIXME Have a configuration menu or something.
                 var regex = new Regex (Regex.escape_string(search_entry.text),
                     RegexCompileFlags.CASELESS);
-                this.window.current_terminal.search_set_gregex (regex);
+                this.window.current_terminal.search_set_gregex (regex, 0);
                 this.window.current_terminal.search_set_wrap_around (true);
             } catch ( RegexError er) {
                 warning ("There was an error to compile the regex: %s", er.message);
diff --git a/src/Settings.vala b/src/Settings.vala
index 101f98f..d79f87e 100644
--- a/src/Settings.vala
+++ b/src/Settings.vala
@@ -65,7 +65,7 @@ namespace PantheonTerminal {
         public string foreground { get; set; }
         public string background { get; set; }
         public string cursor_color { get; set; }
-        public Vte.TerminalCursorShape cursor_shape { get; set; }
+        public Vte.CursorShape cursor_shape { get; set; }
         public string palette { get; set; }
 
         public string shell { get; set; }
@@ -79,4 +79,4 @@ namespace PantheonTerminal {
             base ("org.pantheon.terminal.settings");
         }
     }
-}
\ No newline at end of file
+}
diff --git a/src/TerminalWidget.vala b/src/TerminalWidget.vala
index 4a072ff..0698565 100644
--- a/src/TerminalWidget.vala
+++ b/src/TerminalWidget.vala
@@ -103,9 +103,6 @@ namespace PantheonTerminal {
 
             init_complete = false;
 
-            /* Sets characters that define word for double click selection */
-            set_word_chars ("-A-Za-z0-9/.,_~#%?:=+@");
-
             restore_settings ();
             settings.changed.connect (restore_settings);
 
@@ -177,15 +174,14 @@ namespace PantheonTerminal {
 
         public void restore_settings () {
             /* Load configuration */
-            int opacity = settings.opacity * 65535;
-            set_background_image (null);
-            set_opacity ((uint16) (opacity / 100));
+            double opacity = settings.opacity / 100.0;
 
-            Gdk.Color background_color;
-            Gdk.Color.parse (settings.background, out background_color);
+            Gdk.RGBA background_color = {};
+            background_color.parse (settings.background);
+            background_color.alpha = opacity;
 
-            Gdk.Color foreground_color;
-            Gdk.Color.parse (settings.foreground, out foreground_color);
+            Gdk.RGBA foreground_color = {};
+            foreground_color.parse (settings.foreground);
 
             string[] hex_palette = {"#000000", "#FF6C60", "#A8FF60", "#FFFFCC", "#96CBFE",
                                     "#FF73FE", "#C6C5FE", "#EEEEEE", "#000000", "#FF6C60",
@@ -204,27 +200,32 @@ namespace PantheonTerminal {
                 }
             }
 
-            Gdk.Color[] palette = new Gdk.Color[16];
+            Gdk.RGBA[] palette = new Gdk.RGBA[16];
 
             for (int i = 0; i < hex_palette.length; i++) {
-                Gdk.Color new_color;
-                Gdk.Color.parse (hex_palette[i], out new_color);
+                Gdk.RGBA new_color = {};
+                new_color.parse (hex_palette[i]);
 
                 palette[i] = new_color;
             }
 
             set_colors (foreground_color, background_color, palette);
 
-            Gdk.Color cursor_color;
-            Gdk.Color.parse (settings.cursor_color, out cursor_color);
+            Gdk.RGBA cursor_color = {};
+            cursor_color.parse (settings.cursor_color);
             set_color_cursor (cursor_color);
 
             /* Bold font */
             this.allow_bold = settings.allow_bold;
 
             /* Load encoding */
-            if (settings.encoding != "")
-                set_encoding (settings.encoding);
+            if (settings.encoding != "") {
+                try {
+                    set_encoding (settings.encoding);
+                } catch (Error e) {
+                    warning ("Unable to set encoding: %s", e.message);
+                }
+            }
 
             /* Disable bell if necessary */
             audible_bell = settings.audible_bell;
@@ -274,8 +275,8 @@ namespace PantheonTerminal {
             };
 
             try {
-                this.fork_command_full (Vte.PtyFlags.DEFAULT, dir, { shell },
-                                        envv, SpawnFlags.SEARCH_PATH, null, out this.child_pid);
+                this.spawn_sync (Vte.PtyFlags.DEFAULT, dir, { shell },
+                                  envv, SpawnFlags.SEARCH_PATH, null, out this.child_pid);
             } catch (Error e) {
                 warning (e.message);
             }
@@ -286,8 +287,8 @@ namespace PantheonTerminal {
                 string[]? program_with_args = null;
                 Shell.parse_argv (program_string, out program_with_args);
 
-                this.fork_command_full (Vte.PtyFlags.DEFAULT, null, program_with_args,
-                                        null, SpawnFlags.SEARCH_PATH, null, out this.child_pid);
+                this.spawn_sync (Vte.PtyFlags.DEFAULT, null, program_with_args,
+                                  null, SpawnFlags.SEARCH_PATH, null, out this.child_pid);
             } catch (Error e) {
                 warning (e.message);
             }
@@ -299,7 +300,7 @@ namespace PantheonTerminal {
                 return false;
             }
 
-            int pty = this.pty_object.fd;
+            int pty = this.pty.fd;
             int fgpid = Posix.tcgetpgrp (pty);
 
             if (fgpid != this.child_pid && fgpid != -1) {
-- 
2.3.2

